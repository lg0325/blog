{"version":3,"file":"component---src-pages-404-js-f2ec777ea06b89c5de76.js","mappings":";;;;;;;;AAGA,KAAME,OAAM,CAAG,MAAmC,IAAlC,CAAEC,QAAQ,CAAEC,KAAK,CAAEC,QAAS,CAAC,MAC3C,KAAMC,SAAQ,CAAMC,OAAe,IAAG,CACtC,KAAMC,WAAU,CAAGL,QAAQ,CAACM,QAAQ,GAAKH,QAAQ,CACjD,GAAII,OAAM,CAEV,GAAIF,UAAU,CAAE,CACdE,MAAM,cACJ,uDAAI,SAAS,CAAC,cAAc,eAC1B,iDAAC,wCAAI,EAAC,EAAE,CAAC,GAAG,EAAEN,KAAK,CAAQ,CAE9B,CACH,CAAC,IAAM,CACLM,MAAM,cACJ,iDAAC,wCAAI,EAAC,SAAS,CAAC,kBAAkB,CAAC,EAAE,CAAC,GAAG,EACtCN,KAAK,CAET,CACH,CAEA,mBACE,wDAAK,SAAS,CAAC,gBAAgB,CAAC,oBAAmBI,UAAW,eAC5D,2DAAQ,SAAS,CAAC,eAAe,EAAEE,MAAM,CAAU,cACnD,6DAAOL,QAAQ,CAAQ,cACvB,+DAAQ,OACJ,CAAC,GAAIM,KAAI,EAAE,CAACC,WAAW,EAAE,CAAC,cAC5B,kBACA,sDAAG,IAAI,CAAC,0BAA0B,EAAC,QAAM,CAAI,CACtC,CACL,CAEV,CAAC,CAED,sDAAeV,MAAM;;;;;;;;;ACnCrB;AACA;AACA;AACA;AACA;AACA,GAKA,KAAMY,IAAG,CAAG,MAAsC,qEAArC,CAAEC,WAAW,CAAEX,KAAK,CAAEC,QAAS,CAAC,MAC3C,KAAM,CAAEW,IAAK,CAAC,CAAGH,sDAAc,cAc9B,CAED,KAAMI,gBAAe,CAAGF,WAAW,EAAIC,IAAI,CAACE,YAAY,CAACH,WAAW,CACpE,KAAMI,aAAY,qBAAGH,IAAI,CAACE,YAAY,6CAAjB,mBAAmBd,KAAK,CAE7C,mBACE,+GACE,8DAAQe,YAAY,CAAMf,KAAK,OAAMe,YAAY,CAAKf,KAAK,CAAS,cACpE,yDAAM,IAAI,CAAC,aAAa,CAAC,OAAO,CAAEa,eAAgB,EAAG,cACrD,yDAAM,QAAQ,CAAC,UAAU,CAAC,OAAO,CAAEb,KAAM,EAAG,cAC5C,yDAAM,QAAQ,CAAC,gBAAgB,CAAC,OAAO,CAAEa,eAAgB,EAAG,cAC5D,yDAAM,QAAQ,CAAC,SAAS,CAAC,OAAO,CAAC,SAAS,EAAG,cAC7C,yDAAM,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,SAAS,EAAG,cAC9C,yDACE,IAAI,CAAC,iBAAiB,CACtB,OAAO,CAAE,sBAAAD,IAAI,CAACE,YAAY,qEAAjB,oBAAmBE,MAAM,gDAAzB,sBAA2BC,OAAO,KAAO,EAClD,cACF,yDAAM,IAAI,CAAC,eAAe,CAAC,OAAO,CAAEjB,KAAM,EAAG,cAC7C,yDAAM,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAAEa,eAAgB,EAAG,CAC5DZ,QAAQ,CACR,CAEP,CAAC,CAED,sDAAeS,GAAG;;;;;;;;;;;;;;AC3ClB,KAAMQ,aAAY,CAAG,MAAwB,IAAvB,CAAEC,IAAI,CAAEpB,QAAS,CAAC,MACtC,KAAMqB,UAAS,CAAGD,IAAI,CAACP,IAAI,CAACE,YAAY,CAACd,KAAK,CAE9C,mBACE,iDAAC,mEAAM,EAAC,QAAQ,CAAED,QAAS,CAAC,KAAK,CAAEqB,SAAU,eAC3C,2DAAI,gBAAc,CAAK,cACvB,0DAAG,yDAA2D,CAAI,CAC3D,CAEb,CAAC,CAEM,KAAMC,KAAI,CAAG,iBAAM,iDAAC,gEAAG,EAAC,KAAK,CAAC,gBAAgB,EAAG,CAExD,+DAAeH,YAAY,EAEpB,KAAMI,UAAS,aAQrB","sources":["webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/components/seo.js","webpack://gatsby-starter-blog/./src/pages/404.js"],"sourcesContent":["import * as React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nconst Layout = ({ location, title, children }) => {\r\n  const rootPath = `${__PATH_PREFIX__}/`\r\n  const isRootPath = location.pathname === rootPath\r\n  let header\r\n\r\n  if (isRootPath) {\r\n    header = (\r\n      <h1 className=\"main-heading\">\r\n        <Link to=\"/\">{title}</Link>\r\n      </h1>\r\n    )\r\n  } else {\r\n    header = (\r\n      <Link className=\"header-link-home\" to=\"/\">\r\n        {title}\r\n      </Link>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\r\n      <header className=\"global-header\">{header}</header>\r\n      <main>{children}</main>\r\n      <footer>\r\n        Â© {new Date().getFullYear()}, Built with\r\n        {` `}\r\n        <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\r\n      </footer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n","/**\r\n * SEO component that queries for data with\r\n * Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nconst Seo = ({ description, title, children }) => {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            social {\r\n              twitter\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n  const defaultTitle = site.siteMetadata?.title\r\n\r\n  return (\r\n    <>\r\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\r\n      <meta name=\"description\" content={metaDescription} />\r\n      <meta property=\"og:title\" content={title} />\r\n      <meta property=\"og:description\" content={metaDescription} />\r\n      <meta property=\"og:type\" content=\"website\" />\r\n      <meta name=\"twitter:card\" content=\"summary\" />\r\n      <meta\r\n        name=\"twitter:creator\"\r\n        content={site.siteMetadata?.social?.twitter || ``}\r\n      />\r\n      <meta name=\"twitter:title\" content={title} />\r\n      <meta name=\"twitter:description\" content={metaDescription} />\r\n      {children}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Seo\r\n","import * as React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\n\r\nconst NotFoundPage = ({ data, location }) => {\r\n  const siteTitle = data.site.siteMetadata.title\r\n\r\n  return (\r\n    <Layout location={location} title={siteTitle}>\r\n      <h1>404: Not Found</h1>\r\n      <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const Head = () => <Seo title=\"404: Not Found\" />\r\n\r\nexport default NotFoundPage\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"names":["React","Link","Layout","location","title","children","rootPath","__PATH_PREFIX__","isRootPath","pathname","header","Date","getFullYear","useStaticQuery","Seo","description","site","metaDescription","siteMetadata","defaultTitle","social","twitter","NotFoundPage","data","siteTitle","Head","pageQuery"],"sourceRoot":""}