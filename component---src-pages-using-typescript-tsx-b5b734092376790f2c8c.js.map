{"version":3,"file":"component---src-pages-using-typescript-tsx-b5b734092376790f2c8c.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./src/pages/using-typescript.tsx","webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/components/seo.js"],"sourcesContent":["// If you don't want to use TypeScript you can delete this file!\r\nimport * as React from \"react\"\r\nimport { PageProps, Link, graphql, HeadFC } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\n\r\ntype DataProps = {\r\n  site: {\r\n    buildTime: string\r\n  }\r\n}\r\n\r\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({\r\n  data,\r\n  path,\r\n  location,\r\n}) => (\r\n  <Layout title=\"Using TypeScript\" location={location}>\r\n    <h1>Gatsby supports TypeScript by default!</h1>\r\n    <p>\r\n      This means that you can create and write <code>.ts/.tsx</code> files for\r\n      your pages, components, and <code>gatsby-*</code> configuration files (for\r\n      example <code>gatsby-config.ts</code>).\r\n    </p>\r\n    <p>\r\n      For type checking you'll want to install <em>typescript</em> via npm and\r\n      run <em>tsc --init</em> to create a <em>tsconfig</em> file.\r\n    </p>\r\n    <p>\r\n      You're currently on the page \"{path}\" which was built on{\" \"}\r\n      {data.site.buildTime}.\r\n    </p>\r\n    <p>\r\n      To learn more, head over to our{\" \"}\r\n      <a href=\"https://www.gatsbyjs.com/docs/how-to/custom-configuration/typescript/\">\r\n        documentation about TypeScript\r\n      </a>\r\n      .\r\n    </p>\r\n    <Link to=\"/\">Go back to the homepage</Link>\r\n  </Layout>\r\n)\r\n\r\nexport const Head: HeadFC<DataProps> = () => <Seo title=\"Using TypeScript\" />\r\n\r\nexport default UsingTypescript\r\n\r\nexport const query = graphql`\r\n  {\r\n    site {\r\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\r\n    }\r\n  }\r\n`\r\n","import * as React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nconst Layout = ({ location, title, children }) => {\r\n  const rootPath = `${__PATH_PREFIX__}/`\r\n  const isRootPath = location.pathname === rootPath\r\n  let header\r\n\r\n  if (isRootPath) {\r\n    header = (\r\n      <h1 className=\"main-heading\">\r\n        <Link to=\"/\">{title}</Link>\r\n      </h1>\r\n    )\r\n  } else {\r\n    header = (\r\n      <Link className=\"header-link-home\" to=\"/\">\r\n        {title}\r\n      </Link>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\r\n      <header className=\"global-header\">{header}</header>\r\n      <main>{children}</main>\r\n      <footer>\r\n        Â© {new Date().getFullYear()}, Built with\r\n        {` `}\r\n        <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\r\n      </footer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n","/**\r\n * SEO component that queries for data with\r\n * Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nconst Seo = ({ description, title, children }) => {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            social {\r\n              twitter\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n  const defaultTitle = site.siteMetadata?.title\r\n\r\n  return (\r\n    <>\r\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\r\n      <meta name=\"description\" content={metaDescription} />\r\n      <meta property=\"og:title\" content={title} />\r\n      <meta property=\"og:description\" content={metaDescription} />\r\n      <meta property=\"og:type\" content=\"website\" />\r\n      <meta name=\"twitter:card\" content=\"summary\" />\r\n      <meta\r\n        name=\"twitter:creator\"\r\n        content={site.siteMetadata?.social?.twitter || ``}\r\n      />\r\n      <meta name=\"twitter:title\" content={title} />\r\n      <meta name=\"twitter:description\" content={metaDescription} />\r\n      {children}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Seo\r\n"],"names":["React","Link","Layout","Seo","UsingTypescript","_ref","data","path","location","title","site","buildTime","href","to","Head","query","children","rootPath","__PATH_PREFIX__","isRootPath","pathname","header","Date","getFullYear","useStaticQuery","description","metaDescription","siteMetadata","defaultTitle","social","twitter"],"sourceRoot":""}